import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder

df = pd.read_csv("maharashtra_irrigation_dataset_with_outcome.csv")

df.isnull().sum()        #check for null values
df.shape       #print number of rows and columns
df.head()

features = ['Humidity (%)', 'Temperature (°C)', 'Soil Moisture (%)']   #consider top 3 features

#Plot
for feature in features:
    plt.figure(figsize=(6, 4))
    plt.scatter(df[feature], df['Outcome'], alpha=0.7, color='green')
    plt.xlabel(feature)
    plt.ylabel('Outcome')
    plt.title(f'{feature} vs Outcome')
    plt.tight_layout()
    plt.show()

#Train the model using Logistic Regression and get the classification report
X = df[['Humidity (%)', 'Temperature (°C)', 'Soil Moisture (%)']]
y = df["Outcome"]

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
from sklearn.linear_model import LogisticRegression
regModel = LogisticRegression()
regModel.fit(X_train,y_train)

y_predict = regModel.predict(X_test)

from sklearn.metrics import confusion_matrix
confusion_matrix = confusion_matrix(y_test,y_predict)
print(confusion_matrix)

from sklearn.metrics import classification_report
print(classification_report(y_test,y_predict))



